mutation deleteInvestigatorDecks(
  $campaign_id: Int!,
  $investigator: String!,
  $user_id: String!,
) {
  delete_deck(
    where: {
      campaign_id: { _eq: $campaign_id }
      investigator: { _eq: $investigator }
      owner_id: { _eq: $user_id }
    }
  ) {
    returning {
      id
      arkhamdb_id
      local_uuid
    }
  }
}

mutation setBinaryAchievement(
  $campaign_id: Int!,
  $achievement_id: String!,
  $value: Boolean!
) {
  insert_guide_achievement_one(
    object: {
      campaign_id: $campaign_id
      achievement_id: $achievement_id
      type: "binary"
      bool_value: $value
    }
    on_conflict: {
      constraint: guide_achivement_campaign_id_achievement_id_key
      update_columns: [bool_value]
    }
  ) {
    id
    campaign_id
    achievement_id
    type
    bool_value
  }
}

mutation incCountAchievementMax(
  $campaign_id: Int!,
  $achievement_id: String!,
  $max: Int!
) {
  insert_guide_achievement_one(
    object: {
      campaign_id:$campaign_id
      achievement_id: $achievement_id
      type: "count"
      value: 1
    }
    on_conflict: {
      constraint: guide_achivement_campaign_id_achievement_id_key
      update_columns: []
    }
  ) {
    id
    campaign_id
    achievement_id
    type
    value
  }
  update_guide_achievement(
    where: {
      campaign_id: { _eq: $campaign_id }
      achievement_id: { _eq: $achievement_id }
      value: { _lt: $max }
    }
    _inc: { value: 1 }
  ) {
    returning {
      id
      campaign_id
      achievement_id
      type
      value
    }
  }
}

mutation incCountAchievement(
  $campaign_id: Int!,
  $achievement_id: String!
) {
  insert_guide_achievement_one(
    object: {
      campaign_id:$campaign_id
      achievement_id: $achievement_id
      type: "count"
      value: 1
    }
    on_conflict: {
      constraint: guide_achivement_campaign_id_achievement_id_key
      update_columns: []
    }
  ) {
    id
    campaign_id
    achievement_id
    type
    value
  }
  update_guide_achievement(
    where: {
      campaign_id: { _eq: $campaign_id }
      achievement_id: { _eq: $achievement_id }
    }
    _inc: { value: 1 }
  ) {
    returning {
      id
      campaign_id
      achievement_id
      type
      value
    }
  }
}

mutation decCountAchievement(
  $campaign_id: Int!,
  $achievement_id: String!
) {
  insert_guide_achievement_one(
    object: {
      campaign_id:$campaign_id
      achievement_id: $achievement_id
      type: "count"
      value: 0
    }
    on_conflict: {
      constraint: guide_achivement_campaign_id_achievement_id_key
      update_columns: []
    }
  ) {
    id
    campaign_id
    achievement_id
    type
    value
  }
  update_guide_achievement(
    where: {
      campaign_id: { _eq: $campaign_id }
      achievement_id: { _eq: $achievement_id }
      value: { _gt: 0 }
    }
    _inc: { value: -1 }
  ) {
    returning {
      id
      campaign_id
      achievement_id
      type
      value
    }
  }
}

mutation addGuideInput(
  $campaign_id: Int!,
  $scenario: String,
  $step: String,
  $payload: jsonb
) {
  insert_guide_input_one(
    object: {
      campaign_id: $campaign_id
      scenario: $scenario
      step: $step
      payload: $payload
    }
    on_conflict: {
      constraint: campaign_guide_input_campaign_guide_id_scenario_step_key
      update_columns: [payload]
    }
  ) {
    id
    campaign_id
    scenario
    step
    payload
  }
}
